{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let SharedService = /*#__PURE__*/(() => {\n  class SharedService {\n    constructor() {\n      this.dataStream = new Subject();\n      this.currentDataStream = this.dataStream.asObservable();\n    } //this will call next on the behaviour subject\n    //to change its value\n\n\n    pushboolean(data) {\n      this.dataStream.next(data);\n      console.log(data);\n      return data;\n    }\n\n    pushValue(data) {\n      this.dataStream.next(data);\n      return data;\n    }\n\n  }\n\n  SharedService.ɵfac = function SharedService_Factory(t) {\n    return new (t || SharedService)();\n  };\n\n  SharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SharedService,\n    factory: SharedService.ɵfac,\n    providedIn: 'root'\n  });\n  return SharedService;\n})();","map":null,"metadata":{},"sourceType":"module"}
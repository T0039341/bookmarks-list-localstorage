{"ast":null,"code":"import { RequiredValidator } from '../validators/required.directive';\nimport { UrlValidator } from '../validators/url.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/url.service\";\nimport * as i3 from \"../services/shared.service\";\nimport * as i4 from \"../services/local-storage.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../edit-modal/edit-modal.component\";\nimport * as i8 from \"../bookmark-item/bookmark-item.component\";\n\nfunction BookmarksComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" URL Required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BookmarksComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" URL not Valid \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BookmarksComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" URL already exists \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BookmarksComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" URL already exists \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let BookmarksComponent = /*#__PURE__*/(() => {\n  class BookmarksComponent {\n    constructor(fb, urlService, sharedService, localStorageService, router) {\n      this.fb = fb;\n      this.urlService = urlService;\n      this.sharedService = sharedService;\n      this.localStorageService = localStorageService;\n      this.router = router;\n      this.key = 'key';\n      this.urlArr = [];\n    }\n\n    ngOnInit() {\n      this.createForm(); //testing a random link to be replaced with input value\n      //later, unfortunately no time\n      // this.urlService.checkUrl('http://2.com').subscribe(res => {\n      //   // console.log(res)\n      // }\n      // )\n\n      this.getListVal(this.urlToUpdate);\n      console.log(this.urlToUpdate);\n\n      if (localStorage.getItem(this.key)) {\n        this.storedItems = JSON.parse(this.localStorageService.getItem(this.key) || 'no');\n        this.urlArr = this.storedItems;\n      }\n    }\n\n    createForm() {\n      this.form = this.fb.group({\n        url: ['', [RequiredValidator, UrlValidator]]\n      });\n    }\n\n    getNewArr(arr) {\n      if (this.localStorageService.getItem('key')) {\n        this.localStorageService.setItem('key', JSON.stringify([...arr]));\n      }\n    }\n\n    get url() {\n      return this.form.get('url');\n    } //get the value of div to update\n\n\n    getListVal(list) {\n      this.urlToUpdate = list;\n      console.log(this.urlToUpdate);\n\n      if (this.localStorageService.getItem(this.key)) {\n        let localStorageArray = JSON.parse(this.localStorageService.getItem(this.key) || 'no');\n      }\n    }\n\n    newValz(val) {\n      console.log(this.urlToUpdate);\n      console.log(val);\n      let localStorageArray = JSON.parse(this.localStorageService.getItem(this.key) || 'no');\n\n      for (let i = 0; i < localStorageArray.length; i++) {\n        if (localStorageArray[i] === this.urlToUpdate) {\n          localStorageArray.splice(i, 1);\n        }\n      }\n\n      localStorageArray.push(val);\n      this.getNewArr(localStorageArray);\n      this.urlArr = localStorageArray;\n    }\n\n    onSubmit() {\n      var _a;\n\n      this.urlVal = (_a = this.form.get('url')) === null || _a === void 0 ? void 0 : _a.value;\n\n      if (this.storedItems && this.storedItems.includes(this.urlVal)) {\n        this.checkDuplicates = true;\n      } else {\n        this.urlArr.push(this.urlVal);\n        this.localStorageService.setItem(this.key, JSON.stringify(this.urlArr));\n        this.sharedService.pushValue(this.urlVal);\n        this.router.navigate(['results']);\n        this.form.reset();\n      }\n    }\n\n    updateUrl(updateVal) {\n      console.log(updateVal);\n      console.log(this.newVal);\n    }\n\n  }\n\n  BookmarksComponent.ɵfac = function BookmarksComponent_Factory(t) {\n    return new (t || BookmarksComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UrlService), i0.ɵɵdirectiveInject(i3.SharedService), i0.ɵɵdirectiveInject(i4.LocalStorageService), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  BookmarksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookmarksComponent,\n    selectors: [[\"app-bookmarks\"]],\n    decls: 20,\n    vars: 8,\n    consts: [[1, \"wrapper\"], [1, \"input-wrapper\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-data\"], [\"formControlName\", \"url\", \"type\", \"text\", \"required\", \"\"], [1, \"underline\"], [1, \"error-message\"], [4, \"ngIf\"], [1, \"button-wrapper\"], [\"type\", \"submit\", 1, \"button\", 3, \"disabled\"], [3, \"listVal\", \"formVal\"], [1, \"bookmark-item\", 3, \"urlVal\", \"getListValue\", \"updateUrlVal\", \"newUrlEvent\"]],\n    template: function BookmarksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2, \" URL BOOKMARK APP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function BookmarksComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelement(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"label\");\n        i0.ɵɵtext(9, \"URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵtemplate(11, BookmarksComponent_span_11_Template, 2, 0, \"span\", 7);\n        i0.ɵɵtemplate(12, BookmarksComponent_span_12_Template, 2, 0, \"span\", 7);\n        i0.ɵɵtemplate(13, BookmarksComponent_span_13_Template, 2, 0, \"span\", 7);\n        i0.ɵɵtemplate(14, BookmarksComponent_span_14_Template, 2, 0, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 8);\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"app-edit-modal\", 10);\n        i0.ɵɵlistener(\"formVal\", function BookmarksComponent_Template_app_edit_modal_formVal_18_listener($event) {\n          return ctx.newValz($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"app-bookmark-item\", 11);\n        i0.ɵɵlistener(\"getListValue\", function BookmarksComponent_Template_app_bookmark_item_getListValue_19_listener($event) {\n          return ctx.getListVal($event);\n        })(\"updateUrlVal\", function BookmarksComponent_Template_app_bookmark_item_updateUrlVal_19_listener($event) {\n          return ctx.updateUrl($event);\n        })(\"newUrlEvent\", function BookmarksComponent_Template_app_bookmark_item_newUrlEvent_19_listener($event) {\n          return ctx.getNewArr($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_2_0;\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.url == null ? null : ctx.url.valid) && (ctx.url == null ? null : ctx.url.touched) && (ctx.url == null ? null : ctx.url.errors == null ? null : ctx.url.errors.error));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.url == null ? null : ctx.url.value) && ((tmp_2_0 = ctx.form.get(\"url\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.invalidUrl));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkDuplicates);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkUpdateDuplicates);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"listVal\", ctx.urlToUpdate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"urlVal\", ctx.urlArr);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i6.NgIf, i7.EditModalComponent, i8.BookmarkItemComponent],\n    styles: [\"*[_ngcontent-%COMP%]:not(input){cursor:default}.wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin-top:10rem}.wrapper[_ngcontent-%COMP%] > h1[_ngcontent-%COMP%]{margin-bottom:15px}.input-wrapper[_ngcontent-%COMP%]{background-color:#fff;width:50%;padding:30px;box-shadow:0 0 10px #aaa}.input-wrapper[_ngcontent-%COMP%]   .input-data[_ngcontent-%COMP%]{height:40px;width:100%;position:relative}.input-wrapper[_ngcontent-%COMP%]   .input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{height:100%;width:100%;border:none;font-size:17px;border-bottom:2px solid #666666}.input-wrapper[_ngcontent-%COMP%]   .input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none}.input-wrapper[_ngcontent-%COMP%]   .input-data[_ngcontent-%COMP%]   .underline[_ngcontent-%COMP%]{position:absolute;bottom:0px;height:2px;width:100%}.input-wrapper[_ngcontent-%COMP%]   .input-data[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{position:absolute;bottom:10px;left:0;color:#aaa;pointer-events:none;transition:all .3s ease}.input-data[_ngcontent-%COMP%]   .underline[_ngcontent-%COMP%]:before{position:absolute;content:\\\"\\\";height:100%;width:100%;background-color:#2865a1;transform:scaleX(0);transition:transform .3s ease}.input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus ~ label[_ngcontent-%COMP%], .input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:valid ~ label[_ngcontent-%COMP%]{transform:translateY(-20px);font-size:15px;color:#2865a1}.input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus ~ .underline[_ngcontent-%COMP%]:before, .input-data[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:valid ~ .underline[_ngcontent-%COMP%]:before{transform:scaleX(1)}.button-wrapper[_ngcontent-%COMP%]{margin-top:25px}.button[_ngcontent-%COMP%]{text-decoration:none;background:#2865a1;color:#fff;padding:14px;border-radius:10px;cursor:pointer;transition:all .3s ease}.button[_ngcontent-%COMP%]:hover:enabled{box-shadow:#32325d40 0 30px 60px -12px inset,#0000004d 0 18px 36px -18px inset}.button[_ngcontent-%COMP%]:disabled{background-color:#aaa}.bookmark-item[_ngcontent-%COMP%]{margin-top:15px;width:50%}.error-message[_ngcontent-%COMP%]{font-size:12px;margin-top:5px;color:#f44336}\"]\n  });\n  return BookmarksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}